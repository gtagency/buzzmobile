# Various constants for use throughout the project

# These all relate to the shape of the interal representation of the world,
# which is essentially a numpy array (or image) of `image_width` by 
# `image_height` with a scale factor of `pixels_per_m`, corresponding to the
# number of pixels per each real-world meter
image_width: 1200
image_height: 1200
pixels_per_m: 200

# Used for tentacle projection, travel distance is the step between each 
# tentacle point, and num_points is the length of each tentacle, if using
# liner, and not tentacle projection, ignore
travel_distance: 0.3 
num_points_in_tentacle: 50

# Hardware values dealing with the car to define Ackerman parameters
wheel_circumference: 2.198  # in meters, measured
wheel_base: 1.8 # distance between front and back axels in meters

# Hardware defined maximal steering angle to not break the vehicle
max_steering_angle: 1.0 # radians

# Resolution of potential paths, that is to say, the higher this number, the
# more tentacles/linear paths will be judged
angle_multiplier: 10 # this * max_angle is number of angles to span

# Hardware defined car width, used to score projected tentacles in steering.
buzzmobile_width: 1.5

# Temporary max distance an obstacle can be for breaking to start. See issue #54
braking_distance: 3.0

# Threshold for score in braking calculation in steering.py
braking_score_threshold = 0.4
